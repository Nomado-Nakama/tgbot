services:
  db:
    image: postgres:16-alpine
    environment:
      POSTGRES_DB:   ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - db-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks: [bot-net]

  qdrant:
    image: qdrant/qdrant:latest
    volumes:
      - qdrant-data:/qdrant/storage
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:6333/health"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks: [bot-net]

  migrator:                              # runs migrations once, then exits
    build:
      context: .
      target: base                       # reuse deps layer, no source copy
    command: ["uv", "run", "alembic", "upgrade", "head"]
    env_file: ./.env
    depends_on:
      db:
        condition: service_healthy
    networks: [bot-net]

  bot:
    build: .
    env_file: ./.env
    depends_on:
      db:
        condition: service_healthy
      migrator:
        condition: service_completed_successfully
    restart: unless-stopped
    ports:
      - "${WEBAPP_PORT}:${WEBAPP_PORT}"
    networks: [bot-net]

volumes:
  db-data:
  qdrant-data:

networks:
  bot-net:
    external: false
