services:
  db:
    image: postgres:16-alpine
    volumes:
      - db-data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: tgbot_nakama
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "9441:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks: [bot-network]

  bot:
    build: .
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - ./.env
    environment:
      QDRANT_HOST: qdrant
      QDRANT_PORT: 6333
      POSTGRES_URL: postgresql://postgres:postgres@db/tgbot_nakama
    restart: always
    volumes:
      - ./src:/bot/src
    ports:
      - "${WEBAPP_PORT}:${WEBAPP_PORT}"
    networks: [bot-network]

  qdrant:
    image: qdrant/qdrant:latest
    container_name: qdrant
    ports:
      - "6333:6333"  # REST API
    volumes:
      - qdrant-data:/qdrant/storage
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:6333/health" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks: [ bot-network ]

volumes:
  db-data:
  qdrant-data:

networks:
  bot-network:
    external: false
